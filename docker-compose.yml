---
version: '3.7'

volumes:
  elk-vol:   # Volume to host elk service data locally.
    driver: 'local'
  data-vol:  # Volume to host db service data locally.
    driver: 'local'

services:
  db:
    image: mysql:5.6.44
    command: |
      --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - "3306:3306"  # host:container
    volumes:
      - data-vol:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
    container_name: db-cont

  elk:
    build: ./elk
    environment:
      - LOGSTASH_START=0
    ports:
      - "5601:5601"  # host:container kibana
      - "9200:9200"  # host:container elasticsearch
    volumes:
      - elk-vol:/usr/share/elasticsearch/data
    container_name: elk-cont

  apm:
    image: docker.elastic.co/apm/apm-server:7.1.0
    volumes:
      - ./elk/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro  # apm config
    links:
      - elk:elk
    depends_on:
      - elk
    container_name: apm-cont

  cinema-catalog-service:
    build: ./cinema-catalog-service
    links:
      - db:db
      - elk:elk
      - movies-service:movies-service
      # [other container]:[alias in this container]
      # this will create environment variables in the node.js container
      # with ip and port info for the postgres container
      # also creates entries in /etc/hosts with ip info
    depends_on:
      - db
      - elk
    ports:
      - "8001:8001"  # host:container
    volumes:
      - ./cinema-catalog-service:/home/nupp/app
    container_name: cinema-catalog-service-cont

  movies-service:
    build: ./movies-service
    links:
      - db:db
      - elk:elk
      # [other container]:[alias in this container]
      # this will create environment variables in the node.js container
      # with ip and port info for the postgres container
      # also creates entries in /etc/hosts with ip info
    depends_on:
      - db
      - elk
    ports:
      - "8002:8001"  # host:container
    volumes:
      - ./movies-service:/home/nupp/app
    container_name: movies-service-cont

  search-service:
    build: ./search-service
    links:
      - db:db
      - elk:elk
      # [other container]:[alias in this container]
      # this will create environment variables in the node.js container
      # with ip and port info for the postgres container
      # also creates entries in /etc/hosts with ip info
    depends_on:
      - db
      - elk
    ports:
      - "8003:8001"  # host:container
    volumes:
      - ./search-service:/home/nupp/app
    container_name: search-service-cont
