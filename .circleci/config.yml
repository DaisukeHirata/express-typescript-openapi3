version: 2.1

orbs:
  slack: circleci/slack@0.1.0

executors:
  default:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo

commands:
  movies_service_npm_install:
    steps:
      - restore_cache:
          name: movies service restore cache
          keys:
            - v1-dependencies-{{ checksum "movies-service/package.json" }}
      - run:
          name: movies service temporary remove .git from oas-tools
          command: rm -rf /home/circleci/repo/movies-service/node_modules/oas-tools/.git
          working_directory: movies-service
      - run: 
          name: movies service npm install 
          command: npm install
          working_directory: movies-service
      - save_cache:
          name: movies service save cache
          paths:
            - movies-service/node_modules
          key: v1-dependencies-{{ checksum "movies-service/package.json" }}
  cinema_catalog_service_npm_install:
    steps:
      - restore_cache:
          name: cinema catalog service restore cache
          keys:
            - v1-dependencies-{{ checksum "cinema-catalog-service/package.json" }}
      - run:
          name: cinema catalog service temporary remove .git from oas-tools
          command: rm -rf /home/circleci/repo/cinema-catalog-service/node_modules/oas-tools/.git
          working_directory: cinema-catalog-service
      - run: 
          name: cinema catalog service npm install
          command: npm install
          working_directory: cinema-catalog-service
      - save_cache:
          name: cinema catalog service save cache
          paths:
            - cinema-catalog-service/node_modules
          key: v1-dependencies-{{ checksum "cinema-catalog-service/package.json" }}
  serverless_install:
    steps:
      - run:
          name: install serverless
          command: sudo npm install -g serverless@1.40.0
      - run:
          name: init serverless config
          command: serverless config credentials -k ${AWS_ACCESS_KEY} -s ${AWS_SECRET_KEY} -p aws

jobs:
  movies_service_lint:
    executor: default      
    steps:
      - checkout
      - movies_service_npm_install
      - run:
          name: movies service lint
          command: npm run lint
          working_directory: movies-service
  movies_service_test:
    executor: default
    steps:
      - checkout
      - movies_service_npm_install
      - run:
          name: movies service test
          command: npm run test
          working_directory: movies-service
      # should be considered to use codecov
      - run:
          name: movies service codecov
          command: npm run codecov
          working_directory: movies-service
  movies_service_deploy:
    executor: default
    steps:
      - checkout
      - movies_service_npm_install
      - serverless_install
      - deploy:
          name: movies service deploy
          command: npm run deploy
          working_directory: movies-service

  cinema_catalog_service_lint:
    executor: default
    steps:
      - checkout
      - cinema_catalog_service_npm_install
      - run:
          name: cinema catalog service lint
          command: npm run lint
          working_directory: cinema-catalog-service
  cinema_catalog_service_test:
    executor: default
    steps:
      - checkout
      - cinema_catalog_service_npm_install
      - run:
          name: cinema catalog service test
          command: npm run test
          working_directory: cinema-catalog-service
      # should be considered to use codecov
      - run:
          name: cinema catalog service codecov
          command: npm run codecov
          working_directory: cinema-catalog-service

workflows:
  movies_service:
    jobs: 
      - movies_service_lint
      - movies_service_test:
          requires:
            - movies_service_lint
      - movies_service_deploy:
          requires:
            - movies_service_test
          filters:
            branches:
              only: deploy-movies-service
  cinema_catalog_service:
    jobs: 
      - cinema_catalog_service_lint
      - cinema_catalog_service_test:
          requires:
            - cinema_catalog_service_lint