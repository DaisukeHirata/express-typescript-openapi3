service: cinema-catalog-service

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-1
  environment:
    DATABASE_HOST: shared-infra-dev-aurorardscluster-8yyiaws3s6oe.cluster-c70smiaqrdnm.ap-northeast-1.rds.amazonaws.com
    DATABASE: cinema_catalog
    DATABASE_USER: foo
    DATABASE_PASSWORD: bar
    MOVIES_SERVICE_HOST: https://a48wfef9x6.execute-api.ap-northeast-1.amazonaws.com/dev/

package:
  exclude:
    - "**/*.ts"
    - "test/**"
    - "scripts/**"
    - ".vscode/**"
    - "node_modules/**"
    - "*"
    - "!package.json"

custom:
  AURORA:
    DB_NAME: aurora${opt:stage, self:provider.stage}
    USERNAME: master
    PASSWORD: password
    # HOST:
    #  Fn::GetAtt: [AuroraRDSCluster, Endpoint.Address]
    # PORT:
    #  Fn::GetAtt: [AuroraRDSCluster, Endpoint.Port]
    VPC_CIDR: 10

functions:
  http:
    handler: dist/src/lambda.http
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /{proxy+}
          method: any
          cors: true
    vpc:
      securityGroupIds:
        - ${cf.${self:provider.region}:shared-infra-${opt:stage, self:provider.stage}.ServerlessDefaultSecurityGroup}
      subnetIds:
        - ${cf.${self:provider.region}:shared-infra-${opt:stage, self:provider.stage}.ServerlessSubnetA}
        - ${cf.${self:provider.region}:shared-infra-${opt:stage, self:provider.stage}.ServerlessSubnetB}
        - ${cf.${self:provider.region}:shared-infra-${opt:stage, self:provider.stage}.ServerlessSubnetC}
